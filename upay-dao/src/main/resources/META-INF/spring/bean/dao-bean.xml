<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">


	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${datasource.driverClassName}" />
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="filters" value="${datasource.filters}" />
		<property name="connectionProperties" value="${datasource.connectionProperties}" />
		<property name="initialSize" value="${datasource.initialSize}" />
		<property name="minIdle" value="${datasource.minIdle}" />
		<property name="maxActive" value="${datasource.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${datasource.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${datasource.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${datasource.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${datasource.validationQuery}" />
		<property name="testWhileIdle" value="${datasource.testWhileIdle}" />
		<property name="testOnBorrow" value="${datasource.testOnBorrow}" />
		<property name="testOnReturn" value="${datasource.testOnReturn}" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${datasource.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${datasource.maxPoolPreparedStatementPerConnectionSize}" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="${datasource.removeAbandoned}" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="${datasource.removeAbandonedTimeout}" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="${datasource.logAbandoned}" />
	</bean>


	<bean class="com.pactera.dipper.context.DipperSysInfo" >
		<property name="useDB" value="true" />
	</bean>
	

	<bean id="mastersList" class="java.util.ArrayList">
	</bean>
	<bean id="sentinelsSet" class="java.util.HashSet">
	</bean>
	
	<bean id="daoService" class="com.upay.dao.DaoServiceImpl" parent="DIPPER_DAO">
	</bean>
	<bean id="sequenceService" class="com.upay.dao.SequenceServiceImpl" parent="DIPPER_SEQUENCE_SERVICE"></bean>
<!-- 	<bean id="daoService" parent="DIPPER_DAO" /> -->
	<bean class="com.upay.dao.cache.MybatisRedisCache">
		<constructor-arg value="init_id" />
		<property name="redisTemplate" ref="redisTemplate" />
	</bean>
	<bean id="platFormHolidayContext" class="com.upay.dao.PlatFormHolidayContext" >
		<property name="daoService" ref="daoService" />
	</bean>
</beans>
