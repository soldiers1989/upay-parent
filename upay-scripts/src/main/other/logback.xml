<configuration>

	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
	<property name="LOG_HOME" value="/var/log/appLog" />
	<property name="TRACE_MSG"
		value="&lt;_TRANS&gt;traceid=%X{TraceId},rpcId=%X{RpcId},ExtendSeqNo=%X{ExternalTranSeqNo},LogTime=%d{yyyy-MM-dd HH:mm:ss.SSS},%msg&lt;/_TRANS&gt;%n" />

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- encoder 默认配置为PatternLayoutEncoder -->
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
				%msg%n</pattern>
		</encoder>
	</appender>

	<!-- 按照每天生成日志文件 -->
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/${app_name}_dap_${HOSTNAME}.log</file>
		<!-- 按照固定窗口模式生成日志文件，当文件大于50MB时，生成新的日志文件。窗口大小是1到3，当保存了10个日志文件后，将覆盖最早的日志。 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${LOG_HOME}/${app_name}_dap_${HOSTNAME}.%i.log
			</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>
		<!-- 查看当前活动文件的大小，如果超过指定大小会告知RollingFileAppender 触发当前活动文件滚动 -->
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>10MB</maxFileSize>
		</triggeringPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<!-- <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} 
				- %msg%n</pattern> -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
				%msg%n</pattern>
		</encoder>
	</appender>

	<!-- 按照每天生成trace日志文件 -->
	<appender name="TRACELOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/${app_name}_dap_tracelog_${HOSTNAME}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<!-- 日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/${app_name}_dap_tracelog_${HOSTNAME}.%i.log
			</FileNamePattern>
			<!-- 日志文件保留天数 -->
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!-- 格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>${TRACE_MSG}</pattern>
		</encoder>
		<!-- 日志文件最大的大小 -->
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
	</appender>



	<!--zdal-datasource日志appender -->
	<appender name="zdal.sql"
		class="ch.qos.logback.core.rolling.RollingFileAppender">

		<file>${LOG_HOME}/${app_name}_zdal-client-sql_${HOSTNAME}.log</file>
		<!-- 按照固定窗口模式生成日志文件，当文件大于50MB时，生成新的日志文件。窗口大小是1到3，当保存了10个日志文件后，将覆盖最早的日志。 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<FileNamePattern>${LOG_HOME}/${app_name}_zdal-client-sql_${HOSTNAME}.%i.log
			</FileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>
		-->
		<!-- 查看当前活动文件的大小，如果超过指定大小会告知RollingFileAppender 触发当前活动文件滚动 -->
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>10MB</maxFileSize>
		</triggeringPolicy>


		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
				%msg%n</pattern>
		</encoder>

	</appender>
	<appender name="zdal.pool"
		class="ch.qos.logback.core.rolling.RollingFileAppender">

		<file>${LOG_HOME}/${app_name}_zdal-datasource-pool_${HOSTNAME}.log
		</file>

		<!-- 按照固定窗口模式生成日志文件，当文件大于50MB时，生成新的日志文件。窗口大小是1到3，当保存了10个日志文件后，将覆盖最早的日志。 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<FileNamePattern>${LOG_HOME}/${app_name}_zdal-datasource-pool_${HOSTNAME}.%i.log
			</FileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>
		-->
		<!-- 查看当前活动文件的大小，如果超过指定大小会告知RollingFileAppender 触发当前活动文件滚动 -->
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>10MB</maxFileSize>
		</triggeringPolicy>



		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
				%msg%n</pattern>
		</encoder>

	</appender>
	<appender name="zdal.config"
		class="ch.qos.logback.core.rolling.RollingFileAppender">


		<file>${LOG_HOME}/${app_name}_zdal-client-config_${HOSTNAME}.log
		</file>
		<!-- 按照固定窗口模式生成日志文件，当文件大于50MB时，生成新的日志文件。窗口大小是1到3，当保存了10个日志文件后，将覆盖最早的日志。 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<FileNamePattern>${LOG_HOME}/${app_name}_zdal-client-config_${HOSTNAME}.%i.log
			</FileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>
		-->
		<!-- 查看当前活动文件的大小，如果超过指定大小会告知RollingFileAppender 触发当前活动文件滚动 -->
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>10MB</maxFileSize>
		</triggeringPolicy>


		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
				%msg%n</pattern>
		</encoder>

	</appender>
	
	<!-- 按照每天生成异常日志文件 -->
	<appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/${app_name}_dap_${HOSTNAME}Error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<!-- 日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/${app_name}_dap_tracelog_${HOSTNAME}Error.%i.log
			</FileNamePattern>
			<!-- 日志文件保留天数 -->
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!-- 格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%msg%n</pattern>
		</encoder>
		<!-- 日志文件最大的大小 -->
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
	</appender>
	

	<!--zdal数据源配置管控日志logger -->
	<logger name="com.alipay.zdal" level="ERROR" additivity="false">
		<appender-ref ref="zdal.sql" />
	</logger>

	<logger name="zdal-client-config" level="ERROR" additivity="false">
		<appender-ref ref="zdal.config" />
	</logger>
	<logger name="zdal-datasource-pool" level="ERROR" additivity="false">
		<appender-ref ref="zdal.pool" />
	</logger>
	<logger name="tracelog" level="trace" additivity="false">
		<appender-ref ref="TRACELOG" />
	</logger>
	
	<logger name="ERROR_CODE_LOGGER" level="ERROR" additivity="false">
		<appender-ref ref="FILE_ERROR" />
	</logger>
	
	<logger name="org.springframework" level="ERROR" />
	<logger name="org.apache.commons" level="ERROR" />
	<logger name="org.eclipse.jetty" level="ERROR" />
	<logger name="org.apache.zookeeper" level="ERROR" />
	<logger name="org.mybatis.spring" level="INFO" />
	<logger name="org.apache.cxf" level="ERROR" />
	<logger name="org.mortbay" level="ERROR" />
 	<logger name="zdal-datasource-pool" level="ERROR" />
 	<logger name="com.alibaba.dubbo" level="ERROR" />
 	<logger name="com.cmbc.dap.rpc.dubbo.registry.Docker2ZkRegistry" level="ERROR" />
 	
	
	<root level="INFO">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
	</root>
</configuration>