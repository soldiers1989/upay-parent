<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dipper="http://www.pactera.com/schema/dipper"
	xmlns:data="http://www.pactera.com/schema/dipper/dict" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.pactera.com/schema/dipper
	http://www.pactera.com/schema/dipper.xsd
	http://code.alibabatech.com/schema/dubbo
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd
    http://www.pactera.com/schema/dipper/dict
    http://www.pactera.com/schema/dipper/dict.xsd">
	<!-- SI_PAY20006 微信统一支付 刷卡支付 -->
	<dipper:flow service-id="SI_PAY2006">
		<dipper:try>
			<dipper:route>
				<dipper:invoke>
					<dipper:service ref="SrvPreProcessingServiceImpl" />
				</dipper:invoke>
			</dipper:route>
			<dipper:route>
				<dipper:invoke>
					<dipper:service ref="GeneralSinglePaymentParamChkService" param-ref="initATWeixinMethod"/>
				</dipper:invoke>
			</dipper:route>
			<dipper:route>
			    <dipper:invoke>
					<!-- 是否使用esb连接核心检查-->
					<dipper:service ref="UseEsbCoreChkService" param-ref="initUseEsbCoreMethod" />
			   </dipper:invoke>
		   </dipper:route>
			<dipper:route>
				<dipper:invoke>
					<!-- 商户状态检查/一级商户和二级商户 -->
					<dipper:service ref="MerInfoQryAndChkService" />
					<!-- 微信下单 金额转换 -->
					<dipper:service ref="TranAmtChangService" param-ref="initPayParmChangFlag2006" />
					<!-- 微信单笔限额检查 -->
					<dipper:service ref="LimitAmtCheckService"
						param-ref="initPayParm2006" />
					<!-- 资金通道状态检查 -->
					<dipper:service ref="PayRouteStateChkService"
						param-ref="initPayWebChatInit2006" />
					<!-- 资金通道信息查询 -->
					<dipper:service ref="PayRouteInfoQryService"
						afterDictConv-ref="dataPayAfterRouteInfoQry2006" />
						
					<!-- 订单登记 -->
					<dipper:service ref="PayOrderRegisterOfWeiXinService"
						param-ref="initPayParmRegistOrder2006" />	
					<!-- 费用计算登记 -->
					<dipper:service ref="FeeGetBaseService" param-ref="initPayFeeGet2006" />	
				</dipper:invoke>
			</dipper:route>
			<dipper:route transaction="lazy">
		      	<dipper:invoke>
					<dipper:if expression="target.bodys.isAt== 'UNIONPAY'">
						<!--at通道 -->
						<!-- 银联（微信）订单号 -->
					     <dipper:service ref="GenerateATWeiXinOrderNoService"/> 
					</dipper:if>
			   </dipper:invoke>
			   <dipper:invoke>	
					<!-- 流水登记 -->
					<dipper:service ref="RecordPayFlowListService"
						param-ref="initPayRecordPayFlowListFist2006" beforeDictConv-ref="dataPayBeforeFlowList2006" />
				</dipper:invoke>
			</dipper:route>
			<dipper:route>
				<!-- 微信统一下单 注意金额转换 -->
				<dipper:invoke>
					<dipper:service ref="WebChatChangeInitService"
						param-ref="WebChatChangeInit2006" />
				</dipper:invoke>
				<dipper:invoke>
					<dipper:if expression="target.bodys.isAt== 'UNIONPAY'">
						<!--at通道 -->
						<dipper:service ref="unionPayMicropayClientDipperHandlr"
							param-ref="parm_SI_PAY2066" beforeDictConv-ref="dataPayBeforeweixinpay2006" />
					</dipper:if>
				</dipper:invoke>
				<dipper:invoke>
					<dipper:if expression="target.bodys.isAt== 'DIRECT'">
						<!--非at通道 -->
						<dipper:service ref="defaultWeiXinMicropayClientHandler"
							param-ref="parm_SI_PAY2006" beforeDictConv-ref="dataPayBeforeweixinpay2006" />
					</dipper:if>
				</dipper:invoke>
			</dipper:route>
			<dipper:route>
				<dipper:invoke>
					<!-- 免密支付成功第一步 -->
					<dipper:if expression="target.bodys.returnCode == 'SUCCESS'&amp;&amp;target.bodys.resultCode == 'SUCCESS'&amp;&amp;target.bodys.isAt== 'DIRECT' ">
					<dipper:service ref="GeneralNoticeReqServiceImpl"
							beforeDictConv-ref="dataPayBeforeUpdateMicWinXin2006" />
				   </dipper:if>
			  </dipper:invoke>
			  <dipper:invoke>
					<!-- 免密支付成功第一步 -->
					<dipper:if expression="target.bodys contains 'tradeState' &amp;&amp; target.bodys.tradeState == 'SUCCESS'&amp;&amp;target.bodys.isAt== 'UNIONPAY' ">
						<dipper:service ref="AtGeneralNoticeReqServiceImpl"
							beforeDictConv-ref="dataPayBeforeUpdateMicWinXin2006" />
				   </dipper:if>
			  </dipper:invoke>

			</dipper:route>
			<dipper:route transaction="lazy">
				<dipper:invoke>
					<!-- 免密支付成功第二步 -->
					<dipper:if
						expression="target.bodys.returnCode == 'SUCCESS'&amp;&amp;target.bodys.resultCode == 'SUCCESS' &amp;&amp;target.bodys.isAt== 'DIRECT'">
						<!-- 初始化核心登记参数 查微信往來戶 -->
						<dipper:service ref="PayRouteInfoQryService"
							param-ref="parm_PAYORDERQRY_weixin" afterDictConv-ref="dataPayAfterRouteInfoQry_weixin2006" />
						<!-- 初始化核心登记参数 查核心待清算戶 -->
						<dipper:service ref="PayRouteInfoQryService"
							param-ref="parm_PAYORDERQRY_core" afterDictConv-ref="dataPayAfterRouteInfoQry_core2006" />
						<!-- 核心登记记账预计流水 -->
						<dipper:service ref="RecordEsbCorePayFlowListService"
							param-ref="initPayRecordPayFlowList2006" />
						<!-- 更新订单状态为成功 -->
						<dipper:service ref="PaySetStateServiceImpl"
							param-ref="initPayStateInitRecive" />
						<!-- 修改订单状态 -->
						<dipper:service ref="OrderStatusManageService"
							param-ref="initClearFlag" />
						<!-- 更新分润明细的交易状态 -->
						<dipper:service ref="UpdateFeeAssDetailOrderStatService"
							beforeDictConv-ref="dataPayBeforeUpdateAssFee001" />
						<!-- 更新手续费明细的交易状态 -->
						<dipper:service ref="UpdateFeeDetailOrderStatService" />
						<!-- 修改商户交易日累计 -->
						<dipper:service ref="DailyCumulativeService" />
					</dipper:if>
				</dipper:invoke>
				
				<dipper:invoke>
					<!-- 免密支付成功第二步 -->
					<dipper:if
						expression="target.bodys contains 'tradeState' &amp;&amp; target.bodys.tradeState == 'SUCCESS' &amp;&amp; target.bodys.isAt== 'UNIONPAY'">
						<!-- 初始化核心登记参数 查微信往來戶 -->
						<dipper:service ref="PayRouteInfoQryService"
							param-ref="parm_PAYORDERQRY_weixin" afterDictConv-ref="dataPayAfterRouteInfoQry_weixin2006" />
						<!-- 初始化核心登记参数 查核心待清算戶 -->
						<dipper:service ref="PayRouteInfoQryService"
							param-ref="parm_PAYORDERQRY_core" afterDictConv-ref="dataPayAfterRouteInfoQry_core2006" />
						<!-- 核心登记记账预计流水 -->
						<dipper:service ref="RecordEsbCorePayFlowListService"
							param-ref="initPayRecordPayFlowList2006" />
						<!-- 更新订单状态为成功 -->
						<dipper:service ref="PaySetStateServiceImpl"
							param-ref="initPayStateInitRecive" />
						<!-- 修改订单状态 -->
						<dipper:service ref="OrderStatusManageService"
							param-ref="initClearFlag" />
						<!-- 更新分润明细的交易状态 -->
						<dipper:service ref="UpdateFeeAssDetailOrderStatService"
							beforeDictConv-ref="dataPayBeforeUpdateAssFee001" />
						<!-- 更新手续费明细的交易状态 -->
						<dipper:service ref="UpdateFeeDetailOrderStatService" />
						<!-- 修改商户交易日累计 -->
						<dipper:service ref="DailyCumulativeService" />
					</dipper:if>
				</dipper:invoke>
				
			</dipper:route>
			<dipper:route>
				<dipper:invoke>
					<!-- 免密支付成功 第三步 核心处理 -->
					<dipper:if
						expression="target.bodys.returnCode == 'SUCCESS'&amp;&amp;target.bodys.resultCode == 'SUCCESS' &amp;&amp;target.bodys.isAt== 'DIRECT' &amp;&amp; target.bodys.isEsbCore=='N'">

						<!-- 初始化核心日期参数 -->
						<dipper:service ref="InitBankParamService" />
						<!-- 核心登记记账 ：如果微信支付成功则在核心记一笔帐 -->
						<dipper:service ref="coreCliDipperHandler"
							param-ref="initCorePayweixin" beforeDictConv-ref="dataPayweixinToCore" />
						<!-- 状态设置 成功情况 -->
						<dipper:service ref="PaySetStateServiceImpl"
							param-ref="initPayStateInitRecive" />
					</dipper:if>
				</dipper:invoke>
				
				<dipper:invoke>
					<!-- 免密支付成功 第三步 esb核心处理 -->
					<dipper:if
						expression="target.bodys.returnCode == 'SUCCESS'&amp;&amp;target.bodys.resultCode == 'SUCCESS' &amp;&amp;target.bodys.isAt== 'DIRECT' &amp;&amp; target.bodys.isEsbCore=='Y'">

						<!-- 初始化核心日期参数 -->
						<dipper:service ref="InitBankParamService" />
						<!-- 核心登记记账 ：如果微信支付成功则在核心记一笔帐 -->
		                <dipper:service ref="esbCliDipperHandler"
							param-ref="initEsbCorePayAlipay" beforeDictConv-ref="esbDataPayweixinToCore" />
						<!-- 状态设置 成功情况 -->
						<dipper:service ref="PaySetStateServiceImpl"
							param-ref="initPayStateInitRecive" />
					</dipper:if>
				</dipper:invoke>
				
				<dipper:invoke>
					<!-- 免密支付成功 第三步 核心处理 -->
					<dipper:if
						expression="target.bodys contains 'tradeState' &amp;&amp; target.bodys.tradeState == 'SUCCESS' &amp;&amp;target.bodys.isAt== 'UNIONPAY' &amp;&amp; target.bodys.isEsbCore=='N'">
						<!-- 初始化核心日期参数 -->
						<dipper:service ref="InitBankParamService" />
						<!-- 核心登记记账 ：如果微信支付成功则在核心记一笔帐 -->
						<dipper:service ref="coreCliDipperHandler"
							param-ref="initCorePayweixin" beforeDictConv-ref="dataPayweixinToCore" />
						<!-- 状态设置 成功情况 -->
						<dipper:service ref="PaySetStateServiceImpl"
							param-ref="initPayStateInitRecive" />
					</dipper:if>
				</dipper:invoke>
				
				<dipper:invoke>
					<!-- 免密支付成功 第三步 esb核心处理 -->
					<dipper:if
						expression="target.bodys contains 'tradeState' &amp;&amp; target.bodys.tradeState == 'SUCCESS' &amp;&amp;target.bodys.isAt== 'UNIONPAY' &amp;&amp; target.bodys.isEsbCore=='Y'">
						<!-- 初始化核心日期参数 -->
						<dipper:service ref="InitBankParamService" />
						<!-- 核心登记记账 ：如果微信支付成功则在核心记一笔帐 -->
		                <dipper:service ref="esbCliDipperHandler"
							param-ref="initEsbCorePayAlipay" beforeDictConv-ref="esbDataPayweixinToCore" />
						<!-- 状态设置 成功情况 -->
						<dipper:service ref="PaySetStateServiceImpl"
							param-ref="initPayStateInitRecive" />
					</dipper:if>
				</dipper:invoke>
				
			</dipper:route>
			<dipper:route>
				<dipper:invoke>
					<!-- 需要支付密码等异常情况 第一笔流水支付中、订单为支付中 -->
					<dipper:if expression="target.bodys.returnCode != 'SUCCESS' &amp;&amp;target.bodys.isAt== 'DIRECT'">
						<!-- 更新订单状态为支付中 修改第一笔流水状态为支付中 -->
						<dipper:service ref="PaySetStateServiceImpl"
							param-ref="initPayStateInitPayment2006" />
						<!-- 更新订单状态 -->
						<dipper:service ref="OrderStatusManageService" />
					</dipper:if>
				</dipper:invoke>
				
				<dipper:invoke>
					<!-- 需要支付密码等异常情况 第一笔流水支付中、订单为支付中 -->
					<dipper:if expression="target.bodys contains 'tradeState' &amp;&amp; target.bodys.tradeState !='SUCCESS' &amp;&amp;target.bodys.isAt== 'UNIONPAY'">
						<!-- 更新订单状态为支付中 修改第一笔流水状态为支付中 -->
						<dipper:service ref="PaySetStateServiceImpl"
							param-ref="initPayStateInitPayment2006" />
						<!-- 更新订单状态 -->
						<dipper:service ref="OrderStatusManageService" />
						<!-- 更新流水状态 -->
						<dipper:service ref="AtGeneralNoticeReqServiceImpl" />
					</dipper:if>
				</dipper:invoke>
				
				
				<dipper:invoke>
					<!-- 支付失败 -->
				   <dipper:if expression="target.bodys.resultCode !='SUCCESS' &amp;&amp;target.bodys.isAt== 'UNIONPAY'">
						<!-- 更新订单状态为失败 修改第一笔流水状态为失败 -->
						<dipper:service ref="PaySetStateServiceImpl"
							param-ref="initPayStateInitPayment2006" />
						<!-- 更新订单状态 -->
						<dipper:service ref="OrderStatusManageService" />
						<!-- 更新流水状态 -->
						<dipper:service ref="AtGeneralNoticeReqServiceImpl" />
					</dipper:if>
				</dipper:invoke>
			</dipper:route>
		</dipper:try>
		<dipper:catchException>
			<!-- 状态设置异常情况 -->
			<dipper:route>
				<dipper:invoke>
					<dipper:service ref="PaySetStateServiceImpl"
						param-ref="initPayStateInitPayment2006" />
				</dipper:invoke>
			</dipper:route>
		</dipper:catchException>
		<dipper:finally>
			<!-- 更新订单/流水状态 -->
			<dipper:route>
			    <dipper:invoke>
					<!-- 修改核心通道流水状态 -->
					<dipper:if expression="(target.bodys contains 'tradeState' &amp;&amp; target.bodys.tradeState == 'SUCCESS'&amp;&amp;target.bodys.isAt== 'UNIONPAY') || (target.bodys.returnCode == 'SUCCESS'&amp;&amp;target.bodys.resultCode == 'SUCCESS'&amp;&amp;target.bodys.isAt== 'DIRECT') &amp;&amp; target.bodys.isEsbCore=='N'">
					<dipper:service ref="SeqStatusManageService"
						beforeDictConv-ref="dataPayBeforeCoreResult" />
					</dipper:if>	
				</dipper:invoke>
			
			
				<dipper:invoke>
					<!-- 修改核心通道流水状态 -->
					<dipper:if expression="(target.bodys contains 'tradeState' &amp;&amp; target.bodys.tradeState == 'SUCCESS'&amp;&amp;target.bodys.isAt== 'UNIONPAY') || (target.bodys.returnCode == 'SUCCESS'&amp;&amp;target.bodys.resultCode == 'SUCCESS'&amp;&amp;target.bodys.isAt== 'DIRECT') &amp;&amp; target.bodys.isEsbCore=='Y'">
					<dipper:service ref="SeqStatusManageService"
						beforeDictConv-ref="dataPayBeforeCoreResult2018" />
					</dipper:if>	
				</dipper:invoke>
				
			</dipper:route>
			<dipper:route>
				<dipper:invoke>
					<dipper:service ref="SrvPostProcessingServiceImpl" />
				</dipper:invoke>
			</dipper:route>
		</dipper:finally>
	</dipper:flow>
</beans>    