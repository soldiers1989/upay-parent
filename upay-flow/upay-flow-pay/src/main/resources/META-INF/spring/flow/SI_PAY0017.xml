<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dipper="http://www.pactera.com/schema/dipper"
       xmlns:data="http://www.pactera.com/schema/dipper/dict"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.pactera.com/schema/dipper http://www.pactera.com/schema/dipper.xsd
            http://www.pactera.com/schema/dipper/dict http://www.pactera.com/schema/dipper/dict.xsd">

    <!-- 退款申请接口（支付款退款） -->
    <dipper:flow service-id="SI_PAY0017">
        <dipper:try>
            <dipper:route> <!-- 交易前处理 -->
                <dipper:invoke>
                    <dipper:service ref="SrvPreProcessingServiceImpl" />
                </dipper:invoke>
            </dipper:route>
            <dipper:route> <!-- 一级商户状态检查 -->
                <dipper:invoke>
                    <dipper:service ref="MerStatChkService"/>
                </dipper:invoke>
            </dipper:route>
            <dipper:route> <!-- 退款检查 -->
                <dipper:invoke><!-- 交易参数检查、原支付订单状态检查、是否重复提交退款、退款金额检查、退款期限检查 -->
                    <dipper:service ref="RefundPlatOrderCheckService" /> 
                </dipper:invoke>
                <dipper:invoke><!-- 资金通道检查 -->
                	<dipper:service ref="PayRouteStateChkService" param-ref="initRefundCheckRoute"/>
                </dipper:invoke>
                <dipper:invoke><!-- 若是余额支付，检查用户的账户状态,若是隔日退款，检查商户 的账户状态 -->
                	<dipper:if expression="target.bodys.oriPayType == '02' || target.bodys.isNextDayRefund == 'Y'">                	
                    	<dipper:service ref="CheckUserAccountStatService" param-ref="refundAcctStatChkParam" beforeDictConv-ref="dataPayBeforeRefundUserId"/>
                	</dipper:if>
                </dipper:invoke>
            </dipper:route>
            <dipper:route transaction="lazy"> 
                <dipper:invoke><!-- 保存退款申请订单 -->
                	<dipper:if expression="target.bodys.refundRepeatFlag == '0'">                	
                    	<dipper:service ref="RecordRefundOrderService" />
                	</dipper:if>
                </dipper:invoke>
            </dipper:route>
            <dipper:route>
            	<dipper:invoke><!-- 扣除商户余额 -->
            		<dipper:if expression="target.bodys contains 'isNextDayRefund' &amp;&amp; target.bodys.isNextDayRefund == 'Y'">
	            		<dipper:service ref="SubtractAccountAmtService" param-ref="initPayAccAmtUpdateSub" beforeDictConv-ref="dataPayMerAccAmtUpdate2"/>
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <!-- 记录流水 -->
            <dipper:route transaction="lazy">
            	<dipper:invoke><!-- 需要访问第三方接口时 -->
            		<dipper:if expression="target.bodys.routeCode != '0001'">
            			<dipper:service ref="RecordRefundPayFlowService" param-ref="initRefundMerFlowList"/>
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <dipper:route>
            	<dipper:invoke><!-- 调用外部接口之前初始化参数 -->
            		<dipper:if expression="target.bodys.routeCode != '0001' &amp;&amp; target.bodys.routeCode != '0003'">
            			<dipper:service ref="InitBankParamService" beforeDictConv-ref="dataRefundZJ2521Init"/>
           			</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <!-- 中金退款 -->
            <dipper:route>
            	<dipper:invoke><!-- 中金快捷支付退款 -->
            		<dipper:if expression="target.bodys.routeCode == '0004' &amp;&amp; (target.bodys.oriPayType == '01' || target.bodys.oriPayType='60' || target.bodys.oriPayType == '61')">
            			<dipper:service ref="SA_ZJPAY_Pay2521Handler" beforeDictConv-ref="dataRefundZJ2521"/>
            		</dipper:if>
            	</dipper:invoke>            
            </dipper:route>
            <!-- 银联退款 -->
            <dipper:route>
            	<dipper:invoke><!-- 银联退款 -->
            		<dipper:if expression="target.bodys.routeCode == '0002' &amp;&amp; target.bodys.oriPayType == '20'">
            			<!-- <dipper:service ref=""/> -->
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <!-- 微信退款  -->
            <dipper:route>
            	<dipper:invoke><!-- 微信扫码退款 -->
            		<dipper:if expression="target.bodys.routeCode == '0003' &amp;&amp; target.bodys.oriPayType == '10'">
            			<dipper:service ref="defaultWeiXinHttpsClientHandler" param-ref="initRefundWeixinPub" beforeDictConv-ref="dataRefundWeixinPub"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 微信公众号退款 -->
            		<dipper:if expression="target.bodys.routeCode == '0003' &amp;&amp; target.bodys.oriPayType == '11'">
            			<dipper:service ref="defaultWeiXinHttpsClientHandler" param-ref="initRefundWeixinPub" beforeDictConv-ref="dataRefundWeixinPub"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 微信刷卡退款 -->
            		<dipper:if expression="target.bodys.routeCode == '0003' &amp;&amp; target.bodys.oriPayType == '12'">
            			<!-- <dipper:service ref="defaultWeiXinHttpsClientHandler"/> -->
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <!-- 更新流水 -->
            <dipper:route>            
            	<dipper:invoke><!-- 获取需要更新的状态 -->
            		<dipper:if expression="target.bodys.routeCode != '0001'">
            			<dipper:service ref="PayErrHandleService"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 更新流水 -->
            		<dipper:if expression="target.bodys.oriPayType != '10' &amp;&amp; target.bodys.routeCode != '11' &amp;&amp; target.bodys.routeCode != '12'">
            			<dipper:service ref="SeqStatusManageService"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke>
    		        <dipper:if expression="target.bodys.oriPayType == '10' || target.bodys.routeCode == '11' || target.bodys.routeCode == '12'">
            			<dipper:service ref="SeqStatusManageService" beforeDictConv-ref="weixinSeq"/>
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <!-- 资金通道查询 -->
            <dipper:route>
            	<dipper:invoke><!-- 变更资金通道为核心 -->
            		<dipper:service ref="PayRouteInfoQryService" param-ref="updateRouteCodeTo0001"/>
            	</dipper:invoke>
            </dipper:route>
            <!-- 记录核心流水  -->
            <dipper:route>
            	<dipper:invoke><!-- 隔日退款，付款方位商户虚拟账户 （资金池）-->
            		<dipper:if expression="target.bodys contains 'isNextDayRefund' &amp;&amp; target.bodys.isNextDayRefund == 'Y'">
	                    <dipper:service ref="RecordRefundPayFlowService" param-ref="initRefundMerAccAmtFlow" beforeDictConv-ref="dataPayBeforeRefundFlowList"/>
                	</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 当日退款，付款方为待清算 -->
            		<dipper:if expression="target.bodys contains 'isNextDayRefund' &amp;&amp; target.bodys.isNextDayRefund == 'N' ">
	                    <dipper:service ref="RecordRefundPayFlowService" param-ref="initRefundMerFlowList"/>
                	</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <dipper:route>
            	<dipper:invoke><!-- 调用外部接口之前初始化参数 -->
            		<dipper:if expression="target.bodys.routeCode == '0001'">
            			<dipper:service ref="InitBankParamService" beforeDictConv-ref="dataRefundZJ2521Init"/>
           			</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <!-- 核心本行快捷 -->
            <dipper:route>
            	<dipper:invoke><!-- 本行信用卡退款 -->
            		<dipper:if expression="target.bodys.routeCode == '0001' &amp;&amp; target.bodys.payeeAccType == '12' &amp;&amp; target.bodys.oriPayType == '00'">
            			<dipper:service ref="coreCliDipperHandler" param-ref="coreRefundInitParm_08011"
                                        beforeDictConv-ref="coreRefundBefDictConv1"/> <!-- 调用核心贷记卡记账接口 08011 -->
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 本行借记卡退款 -->
            		<dipper:if expression="target.bodys.routeCode == '0001' &amp;&amp; target.bodys.payeeAccType == '11' &amp;&amp; target.bodys.oriPayType == '00'">            		
                        <dipper:service ref="coreCliDipperHandler" param-ref="coreRefundInitParm_08001"
                                        beforeDictConv-ref="coreRefundBefDictConv1"/> <!-- 调用核心借记卡记账接口 08001 -->
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 内部户记账 -->
            		<dipper:if expression="target.bodys.routeCode == '0001' &amp;&amp; target.bodys.oriPayType != '00' &amp;&amp; (target.bodys.oriPayType != '02' || target.bodys.isNextDayRefund == 'N')">            		
                        <dipper:service ref="coreCliDipperHandler" param-ref="initPayCoreBankToPay2"
                                        beforeDictConv-ref="coreRefundBefDictConv2"/> <!-- 调用核心借记卡记账接口 08001 -->
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <!-- 更新流水 -->
            <dipper:route>            
            	<dipper:invoke><!-- 获取需要更新的状态 -->
            		<dipper:if expression="target.bodys.routeCode == '0001'">
            			<dipper:service ref="PayErrHandleService"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 更新流水 -->
            		<dipper:if expression="target.bodys.routeCode == '0001'">
            			<dipper:service ref="SeqStatusManageService"/>
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <!-- 余额支付退款 -->
            <dipper:route>
            	<dipper:invoke><!-- 本地账户修改 -->
            		<dipper:if expression="target.bodys.routeCode == '0001' &amp;&amp; target.bodys.oriPayType == '02'">
            			<dipper:service ref="SubtractAccountAmtService" param-ref="initPayAccAmtUpdateAdd" beforeDictConv-ref="dataPayAccAmtUpdate"/>
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <!-- 退还商户手续费处理 -->
            <dipper:route>
            	<dipper:invoke><!-- 预生成手续费 退还商户流水 -->
            		<dipper:if expression="target.bodys contains 'isRefundFee' &amp;&amp; target.bodys.isRefundFee == 'Y'">
	            		<dipper:service ref="RecordRefundPayFlowService" param-ref="initRefundMerFeeFlow" beforeDictConv-ref="dataPayBeforeRefundMerFee"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 核心接口参数初始化 -->
            		<dipper:if expression="target.bodys contains 'isRefundFee' &amp;&amp; target.bodys.isRefundFee == 'Y'">
	            		<dipper:service ref="InitBankParamService" beforeDictConv-ref="dataRefundZJ2521Init"/>
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <dipper:route>
            	<dipper:invoke><!-- 核心记账 -->
            		<dipper:if expression="target.bodys contains 'isRefundFee' &amp;&amp; target.bodys.isRefundFee == 'Y'">
	            		<dipper:service ref="coreCliDipperHandler"  param-ref="coreRefundFeeInitParm_08001" beforeDictConv-ref="dataPayBeforeRefundMerFeeCore"/>
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <dipper:route>
            	<dipper:invoke><!-- 更新手续费回退流水 -->
            		<dipper:if expression="target.bodys contains 'isRefundFee' &amp;&amp; target.bodys.isRefundFee == 'Y'">
	            		<dipper:service ref="SeqStatusManageService"/>
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <dipper:route>
            	<dipper:invoke><!-- 更新商户虚拟账户余额 -->
            		<dipper:if expression="target.bodys contains 'isRefundFee' &amp;&amp; target.bodys.isRefundFee == 'Y'">
	            		<dipper:service ref="SubtractAccountAmtService" param-ref="initPayAccAmtUpdateAdd" beforeDictConv-ref="dataPayMerAccAmtUpdate2" />
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
        </dipper:try>
        <dipper:catchException>
            <dipper:route>
            	<dipper:invoke>
					<!-- 获取要修改的流水状态和资金通道返回信息 -->
					<dipper:service ref="PayErrHandleService"/>
				</dipper:invoke>
				<dipper:invoke>
					<!-- 更新支付流水状态 -->
					<dipper:if expression="target.bodys contains 'transSubSeq' &amp;&amp; target.bodys.transSubSeq != null">					
						<dipper:service ref="SeqStatusManageService"/>
					</dipper:if>
				</dipper:invoke>
            </dipper:route>
        </dipper:catchException>
        <dipper:finally>
            <dipper:route>
            	<dipper:invoke>
					<!-- 获取订单状态 -->
					<dipper:service ref="ResetOrderStatService"/>
				</dipper:invoke>
				<dipper:invoke>
					<!--余额回退处理  -->
					<dipper:if expression="target.bodys contains 'isNextDayRefund' &amp;&amp; target.bodys.isNextDayRefund == 'Y'">					
						<dipper:service ref="ReturnAccountAmtService" beforeDictConv-ref="dataRefundMerAccAmtUpdate"/>
					</dipper:if>
				</dipper:invoke>
				<!-- 余额修改 -->
				<dipper:invoke>
					<dipper:if expression="target.bodys contains 'isAccAmtRefund' &amp;&amp; target.bodys.isAccAmtRefund == 'Y'">
						<dipper:service ref="SubtractAccountAmtService" param-ref="initPayAccAmtUpdateAdd"/>
					</dipper:if>
				</dipper:invoke>
				<dipper:invoke>
					<!-- 更新订单状态 -->
					<dipper:service ref="OrderStatusManageService" />
				</dipper:invoke>
				<!-- 更新原订单状态 -->
				<dipper:invoke>
					<dipper:service ref="UpdateOriginalOrderStatService"/>
				</dipper:invoke>
                <dipper:invoke> <!-- 交易后处理 -->
                    <dipper:service ref="SrvPostProcessingServiceImpl" />
                </dipper:invoke>
            </dipper:route>
        </dipper:finally>
    </dipper:flow>

</beans>