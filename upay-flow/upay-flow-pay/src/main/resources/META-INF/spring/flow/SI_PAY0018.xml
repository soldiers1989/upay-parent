<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dipper="http://www.pactera.com/schema/dipper"
       xmlns:data="http://www.pactera.com/schema/dipper/dict"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.pactera.com/schema/dipper http://www.pactera.com/schema/dipper.xsd
            http://www.pactera.com/schema/dipper/dict http://www.pactera.com/schema/dipper/dict.xsd">

    <!-- 退款申请接口（支付款退款） -->
    <dipper:flow service-id="SI_PAY0018">
        <dipper:try>
            <dipper:route> <!-- 交易前处理 -->
                <dipper:invoke>
                    <dipper:service ref="SrvPreProcessingServiceImpl" />
                </dipper:invoke>
            </dipper:route>
            <dipper:route> <!-- 一级商户状态检查 -->
                <dipper:invoke>
                    <dipper:service ref="MerStatChkService"/>
                </dipper:invoke>
            </dipper:route>
            <dipper:route> <!-- 退款检查 -->
                <dipper:invoke><!-- 交易参数检查、原支付订单状态检查、是否重复提交退款、退款金额检查、退款期限检查 -->
                    <dipper:service ref="RefundOrderCheckService" /> 
                </dipper:invoke>
                <dipper:invoke><!-- 资金通道检查 -->
                	<dipper:service ref="PayRouteStateChkService" param-ref="initRefundCheckRoute"/>
                </dipper:invoke>
                <dipper:invoke><!-- 若是隔日退款，检查商户 的账户状态 -->
                	<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y'">                	
                    	<dipper:service ref="CheckUserAccountStatService" param-ref="refundAcctStatChkParam" beforeDictConv-ref="dataPayBeforeRefundUserId"/>
                	</dipper:if>
                </dipper:invoke>
                <dipper:invoke><!-- 若是余额支付，检查用户的账户状态-->
                	<dipper:if expression="target.bodys.oriPayType == '02' ">                	
                    	<dipper:service ref="CheckUserAccountStatService" param-ref="refundAcctStatChkParam" beforeDictConv-ref="dataPayBeforeRefundUserId" afterDictConv-ref="dataPayAfterUserRefundUserId"/>
                	</dipper:if>
                </dipper:invoke>
            </dipper:route>
            <dipper:route transaction="lazy"> 
                <dipper:invoke><!-- 保存退款申请订单 -->
                	<dipper:if expression="target.bodys.refundRepeatFlag == '0'">                	
                    	<dipper:service ref="RecordRefundOrderService" />
                	</dipper:if>
                </dipper:invoke>
            </dipper:route>
            <dipper:route>
            	<dipper:invoke><!-- 扣除商户余额 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '1' &amp;&amp; target.bodys.merStlAccType=='01'">
	            		<dipper:service ref="SubtractAccountAmtService" param-ref="initPayAccAmtUpdateSub" beforeDictConv-ref="dataPayMerAccAmtUpdate2"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 增加商户余额 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '0' &amp;&amp; target.bodys.merStlAccType=='01'">
	            		<dipper:service ref="SubtractAccountAmtService" param-ref="initPayAccAmtUpdateAdd" beforeDictConv-ref="dataPayMerAccAmtUpdate2"/>
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            
            <dipper:route><!-- 结算账户为他行卡或者他行对公账户 -->
            	<dipper:invoke>
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; (target.bodys.merStlAccType=='22' || target.bodys.merStlAccType=='24')">
            			<!-- 退款请求中金代收代付接口参数准备 -->
            			<dipper:service ref="InitParamRefundService" />
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke>
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'reqzjFlag' &amp;&amp; target.bodys.reqzjFlag == '2011' &amp;&amp; (target.bodys.merStlAccType=='22' || target.bodys.merStlAccType=='24') ">
            			<!-- 登记中金流水 -->
            			<dipper:service ref="RecordPayFlowListService" beforeDictConv-ref="refundReqZJRecordFlowList2011" param-ref="initPaySrFlag"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke>
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'reqzjFlag' &amp;&amp; target.bodys.reqzjFlag == '4530' &amp;&amp; (target.bodys.merStlAccType=='22' || target.bodys.merStlAccType=='24') ">
            			<!-- 登记中金流水 -->
            			<dipper:service ref="RecordPayFlowListService" beforeDictConv-ref="refundReqZJRecordFlowList4530" param-ref="initPaySrFlag"/>
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
             <dipper:route>
            	<dipper:invoke>
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'reqzjFlag' &amp;&amp; target.bodys.reqzjFlag == '2011' &amp;&amp; (target.bodys.merStlAccType=='22' || target.bodys.merStlAccType=='24')">
            			<!-- 请求中金代收接口-->
            			<dipper:service ref="SA_ZJPAY_Pay2011Handler" beforeDictConv-ref="refundReqZJService2011" />
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke>
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp;target.bodys contains 'reqzjFlag' &amp;&amp; target.bodys.reqzjFlag == '4530'  &amp;&amp; (target.bodys.merStlAccType=='22' || target.bodys.merStlAccType=='24')">
            			<!-- 请求中金代付接口-->
            			<dipper:service ref="SA_ZJPAY_Pay4530Handler" beforeDictConv-ref="refundReqZJService4530" />
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke>
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; (target.bodys.merStlAccType=='22' || target.bodys.merStlAccType=='24') ">
	            		<!-- 获取状态 -->
	            		<dipper:service ref="PayErrHandleService"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke>
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; (target.bodys.merStlAccType=='22' || target.bodys.merStlAccType=='24') ">
	            		<!-- 更新流水 -->
            			<dipper:service ref="SeqStatusManageService" beforeDictConv-ref="refundClrTypeZJ"/>
            		</dipper:if>
            	</dipper:invoke>
            		
            </dipper:route>
            
            <dipper:route><!-- 扣除商户结算账户或者本行卡 -->
            	<dipper:invoke><!-- 登记流水 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '1' &amp;&amp; target.bodys.merStlAccType=='11'">
            			<dipper:service ref="RecordPayFlowListService" param-ref="initPaySrFlagCoreMerStla" beforeDictConv-ref="dataPayBeforeFlowListMerStlSub" afterDictConv-ref="dataRefundBeforeFlowList"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 登记流水 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '0' &amp;&amp; target.bodys.merStlAccType=='11'">
            			<dipper:service ref="RecordPayFlowListService" param-ref="initPaySrFlagCoreMerStlb" beforeDictConv-ref="dataPayBeforeFlowListMerStlAdd" afterDictConv-ref="dataRefundBeforeFlowList"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 登记流水 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '1' &amp;&amp; (target.bodys.merStlAccType == '01' || target.bodys.merStlAccType == '21')">
            			<dipper:service ref="RecordPayFlowListService" param-ref="initPaySrFlagCoreMerStlc" beforeDictConv-ref="dataPayBeforeFlowListMerStlSub" afterDictConv-ref="dataRefundBeforeFlowList"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 登记流水 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '0' &amp;&amp; (target.bodys.merStlAccType == '01' || target.bodys.merStlAccType == '21')">
            			<dipper:service ref="RecordPayFlowListService" param-ref="initPaySrFlagCoreMerStlc" beforeDictConv-ref="dataPayBeforeFlowListMerStlAdd" afterDictConv-ref="dataRefundBeforeFlowList"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 登记流水 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '1' &amp;&amp; target.bodys.merStlAccType == '23'">
            			<dipper:service ref="RecordPayFlowListService" param-ref="initPaySrFlagCoreMerStld" beforeDictConv-ref="dataPayBeforeFlowListMerStlSub" afterDictConv-ref="dataRefundBeforeFlowList"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 登记流水 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '0' &amp;&amp; target.bodys.merStlAccType == '23'">
            			<dipper:service ref="RecordPayFlowListService" param-ref="initPaySrFlagCoreMerStle" beforeDictConv-ref="dataPayBeforeFlowListMerStlAdd" afterDictConv-ref="dataRefundBeforeFlowList"/>
            		</dipper:if>
            	</dipper:invoke>
            	
            	<dipper:invoke><!-- 登记流水 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '1' &amp;&amp; (target.bodys.merStlAccType == '22' || target.bodys.merStlAccType == '24')">
            			<dipper:service ref="RecordPayFlowListService" param-ref="initPaySrFlagCoreMerStlc" beforeDictConv-ref="dataPayBeforeFlowListZJ2011" afterDictConv-ref="dataRefundBeforeFlowList"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 登记流水 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '0' &amp;&amp; (target.bodys.merStlAccType == '22' || target.bodys.merStlAccType == '24')">
            			<dipper:service ref="RecordPayFlowListService" param-ref="initPaySrFlagCoreMerStlc" beforeDictConv-ref="dataPayBeforeFlowListZJ4530" afterDictConv-ref="dataRefundBeforeFlowList"/>
            		</dipper:if>
            	</dipper:invoke>
            	
            </dipper:route>
            <dipper:route>
            	<dipper:invoke><!-- 核心日期初始化 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y'">
            			<dipper:service ref="InitBankParamService"/>
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <dipper:route>
            	<dipper:invoke><!-- 核心 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '0' &amp;&amp; target.bodys.merStlAccType == '01'">
            			<dipper:service ref="coreCliDipperHandler" param-ref="initPayCoreBankToPayMerStlc" beforeDictConv-ref="coreRefundBefDictConvMerStld"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 核心 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '1' &amp;&amp; target.bodys.merStlAccType == '01'">
            			<dipper:service ref="coreCliDipperHandler" param-ref="initPayCoreBankToPayMerStlc" beforeDictConv-ref="coreRefundBefDictConvMerStlc"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 核心 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '0' &amp;&amp; target.bodys.merStlAccType == '21'">
            			<dipper:service ref="coreCliDipperHandler" param-ref="initPayCoreBankToPayMerStlc" beforeDictConv-ref="coreRefundBefDictConvMerStlb"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 核心 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '1' &amp;&amp; target.bodys.merStlAccType == '21'">
            			<dipper:service ref="coreCliDipperHandler" param-ref="initPayCoreBankToPayMerStlc" beforeDictConv-ref="coreRefundBefDictConvMerStla"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 核心 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '0' &amp;&amp; (target.bodys.merStlAccType == '11')">
            			<dipper:service ref="coreCliDipperHandler" param-ref="initPayCoreBankToPayMerStlb" beforeDictConv-ref="coreRefundBefDictConvMerStla"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 核心 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '1' &amp;&amp; (target.bodys.merStlAccType == '11')">
            			<dipper:service ref="coreCliDipperHandler" param-ref="initPayCoreBankToPayMerStla" beforeDictConv-ref="coreRefundBefDictConvMerStla"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 核心 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '0' &amp;&amp; (target.bodys.merStlAccType == '23')">
            			<dipper:service ref="coreCliDipperHandler" param-ref="initPayCoreBankToPayMerStle" beforeDictConv-ref="coreRefundBefDictConvMerStla"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 核心 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '1' &amp;&amp; (target.bodys.merStlAccType == '23')">
            			<dipper:service ref="coreCliDipperHandler" param-ref="initPayCoreBankToPayMerStld" beforeDictConv-ref="coreRefundBefDictConvMerStla"/>
            		</dipper:if>
            	</dipper:invoke>
            	
            	<dipper:invoke><!-- 核心 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '0' &amp;&amp; (target.bodys.merStlAccType == '22' || target.bodys.merStlAccType == '24')">
            			<dipper:service ref="coreCliDipperHandler" param-ref="initPayCoreBankToPayMerStlc" beforeDictConv-ref="coreRefundBefDictConvMerStl4530"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 核心 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y' &amp;&amp; target.bodys contains 'merAddOrSub' &amp;&amp; target.bodys.merAddOrSub == '1' &amp;&amp; (target.bodys.merStlAccType == '22' || target.bodys.merStlAccType == '24')">
            			<dipper:service ref="coreCliDipperHandler" param-ref="initPayCoreBankToPayMerStlc" beforeDictConv-ref="coreRefundBefDictConvMerStl2011"/>
            		</dipper:if>
            	</dipper:invoke>
            	
            </dipper:route>
            <dipper:route>
            	<dipper:invoke><!-- 获取状态 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y'">
            			<dipper:service ref="PayErrHandleService"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 更新流水 -->
            		<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y'">
            			<dipper:service ref="SeqStatusManageService" afterDictConv-ref="dataRefundBeforeFlowListCode" beforeDictConv-ref="dataRefundBeforeClrType"/>
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <!-- 记录流水 -->
            <dipper:route transaction="lazy">
            	<dipper:invoke><!-- 需要访问第三方接口时 -->
            		<dipper:if expression="target.bodys.routeCode != '0001'">
            			<dipper:service ref="RecordRefundPayFlowService" param-ref="initRefundMerFlowList"/>
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <dipper:route>
            	<dipper:invoke><!-- 调用外部接口之前初始化参数 -->
            		<dipper:if expression="target.bodys.routeCode != '0001' &amp;&amp; target.bodys.routeCode != '0003'">
            			<dipper:service ref="InitBankParamService" beforeDictConv-ref="dataRefundZJ2521Init"/>
           			</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <!-- 微信退款  -->
            <dipper:route>
            	<dipper:invoke><!-- 微信扫码退款 -->
            		<dipper:if expression="target.bodys.routeCode == '0003'">
            			<dipper:service ref="defaultWeiXinHttpsClientHandler" param-ref="initRefundWeixinPub" beforeDictConv-ref="dataRefundWeixinPub"/>
            		</dipper:if>
            	</dipper:invoke>
            	<!-- <dipper:invoke>微信公众号退款
            		<dipper:if expression="target.bodys.routeCode == '0003' &amp;&amp; target.bodys.oriPayType == '11'">
            			<dipper:service ref="defaultWeiXinHttpsClientHandler" param-ref="initRefundWeixinPub" beforeDictConv-ref="dataRefundWeixinPub"/>
            		</dipper:if>
            	</dipper:invoke> -->
            	<!-- <dipper:invoke>微信刷卡退款
            		<dipper:if expression="target.bodys.routeCode == '0003' &amp;&amp; target.bodys.oriPayType == '12'">
            			<dipper:service ref="defaultWeiXinHttpsClientHandler"/>
            		</dipper:if>
            	</dipper:invoke> -->
            </dipper:route>
            <!-- 更新流水 -->
            <dipper:route>            
            	<dipper:invoke><!-- 获取需要更新的状态 -->
            		<dipper:if expression="target.bodys.routeCode != '0001'">
            			<dipper:service ref="PayErrHandleService"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 更新流水 -->
            		<dipper:if expression="target.bodys.routeCode != '0001' &amp;&amp; target.bodys.routeCode != '0003'">
            			<dipper:service ref="SeqStatusManageService" beforeDictConv-ref="refundClrTypeZJ"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke>
    		        <dipper:if expression="target.bodys.routeCode == '0003'">
            			<dipper:service ref="SeqStatusManageService" beforeDictConv-ref="weixinSeq"/>
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <!-- 资金通道查询 -->
            <dipper:route>
            	<dipper:invoke><!-- 变更资金通道为核心 -->
            		<dipper:service ref="PayRouteInfoQryService" param-ref="updateRouteCodeTo0001"/>
            	</dipper:invoke>
            </dipper:route>
            <!-- 记录核心流水  -->
            <dipper:route>
            	<dipper:invoke><!-- 当日退款，付款方为待清算 -->
                    <dipper:service ref="RecordRefundPayFlowService" param-ref="initRefundMerFlowList"/>
            	</dipper:invoke>
            </dipper:route>
            <dipper:route>
            	<dipper:invoke><!-- 调用外部接口之前初始化参数 -->
            		<dipper:if expression="target.bodys.routeCode == '0001'">
            			<dipper:service ref="InitBankParamService"  beforeDictConv-ref="dataRefundZJ2521Init"/>
           			</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <!-- 核心本行快捷 -->
            <dipper:route>
            	<dipper:invoke><!-- 内部户记账 -->
            		<dipper:if expression="target.bodys.routeCode == '0001' &amp;&amp; target.bodys.oriPayType != '00' ">            		
                        <dipper:service ref="coreCliDipperHandler" param-ref="initPayCoreBankToPay2"
                                        beforeDictConv-ref="coreRefundBefDictConv2"/> <!-- 调用核心借记卡记账接口 08001 -->
            		</dipper:if>
            	</dipper:invoke>
            </dipper:route>
            <!-- 更新流水 -->
            <dipper:route>            
            	<dipper:invoke><!-- 获取需要更新的状态 -->
            		<dipper:if expression="target.bodys.routeCode == '0001'">
            			<dipper:service ref="PayErrHandleService"/>
            		</dipper:if>
            	</dipper:invoke>
            	<dipper:invoke><!-- 更新流水 -->
            		<dipper:service ref="SeqStatusManageService" beforeDictConv-ref="weixinClrType"/>
            	</dipper:invoke>
            </dipper:route>
        </dipper:try>
        <dipper:catchException>
            <dipper:route>
            	<dipper:invoke>
					<!-- 获取要修改的流水状态和资金通道返回信息 -->
					<dipper:service ref="PayErrHandleService"/>
				</dipper:invoke>
				<dipper:invoke>
					<!-- 更新支付流水状态 -->
					<dipper:if expression="target.bodys contains 'transSubSeq' &amp;&amp; target.bodys.transSubSeq != null">					
						<dipper:service ref="SeqStatusManageService"/>
					</dipper:if>
				</dipper:invoke>
            </dipper:route>
        </dipper:catchException>
        <dipper:finally>
            <dipper:route>
            	<dipper:invoke>
					<!-- 获取订单状态 -->
					<dipper:service ref="ResetOrderStatService"/>
				</dipper:invoke>
				<dipper:invoke>
					<!-- 更新订单状态 -->
					<dipper:if expression="target.bodys contains 'refundMerStlAmtFlag' &amp;&amp; target.bodys.refundMerStlAmtFlag == 'Y'">
						<dipper:service ref="OrderStatusManageService" param-ref="initPayOrderClearFlagSuc"/>
					</dipper:if>
				</dipper:invoke>
				<dipper:invoke>
					<!-- 更新订单状态 -->
					<dipper:if expression="(!(target.bodys contains 'refundMerStlAmtFlag')) || target.bodys.refundMerStlAmtFlag == 'N'">
						<dipper:service ref="OrderStatusManageService" />
					</dipper:if>
				</dipper:invoke>
				<dipper:invoke>
					<!-- 修改商户交易日累计 隔日退款时不修改日累计-->
					<dipper:if expression="target.bodys contains 'isNextDayRefund' &amp;&amp; target.bodys.isNextDayRefund == 'N'">
						<dipper:service ref="DailyCumulativeService" param-ref="initRefundDaily"/>
					</dipper:if>
				</dipper:invoke>
				<!-- 更新原订单状态 -->
				<dipper:invoke>
					<dipper:service ref="UpdateOriginalOrderStatService"/>
				</dipper:invoke>
                <dipper:invoke> <!-- 交易后处理 -->
                    <dipper:service ref="SrvPostProcessingServiceImpl" />
                </dipper:invoke>
            </dipper:route>
        </dipper:finally>
    </dipper:flow>

</beans>